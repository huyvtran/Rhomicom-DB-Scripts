/* Formatted on 12-19-2018 8:58:13 AM (QP5 v5.126.903.23003) */
DROP TABLE EPAY.EPAY_PSB9_TRNS CASCADE CONSTRAINTS PURGE;

CREATE TABLE EPAY.EPAY_PSB9_TRNS (
   TRANSACTIONS_ID       NUMBER NOT NULL,
   CATIND_ID             NUMBER,                          -- OLD: INDICATOR_ID
   PSB_HDR_ID            NUMBER,
   CREATED_BY            NUMBER,
   CREATION_DATE         VARCHAR2 (21),
   LAST_UPDATE_BY        NUMBER,
   LAST_UPDATE_DATE      VARCHAR2 (21),
   OLD_TRANSACTIONS_ID   NUMBER,
   CONSTRAINT PK_PSB9_TRANSACTIONS_ID PRIMARY KEY (TRANSACTIONS_ID)
)
TABLESPACE RHODB
PCTUSED 0
PCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN EPAY.EPAY_PSB9_TRNS.CATIND_ID IS 'OLD: indicator_id';

DROP SEQUENCE EPAY.EPAY_PSB9_TRNS_SEQ;

CREATE SEQUENCE EPAY.EPAY_PSB9_TRNS_SEQ
   START WITH 1
   MAXVALUE 9223372036854775807
   MINVALUE 1
   NOCYCLE
   NOCACHE
   ORDER;

CREATE OR REPLACE TRIGGER EPAY.EPAY_PSB9_TRNS_TRG
   BEFORE INSERT
   ON EPAY.EPAY_PSB9_TRNS
   FOR EACH ROW
   -- OPTIONALLY RESTRICT THIS TRIGGER TO FIRE ONLY WHEN REALLY NEEDED
   WHEN (NEW.TRANSACTIONS_ID IS NULL)
DECLARE
   V_ID   EPAY.EPAY_PSB9_TRNS.TRANSACTIONS_ID%TYPE;
BEGIN
   SELECT   EPAY.EPAY_PSB9_TRNS_SEQ.NEXTVAL INTO V_ID FROM DUAL;

   :NEW.TRANSACTIONS_ID := V_ID;
END EPAY_PSB9_TRNS_TRG;

CREATE OR REPLACE TRIGGER EPAY.DELETE_PSB9_TRNS_FEES_TRNS_TRG
   BEFORE DELETE
   ON EPAY.EPAY_PSB9_TRNS
   FOR EACH ROW
DECLARE
   I   NUMBER;
BEGIN
   DELETE FROM   EPAY.EPAY_PSB9_TRNS_FEES
         WHERE   TRANSACTIONS_ID = :OLD.TRANSACTIONS_ID;
END DELETE_PSB9_TRNS_FEES_TRNS_TRG;


CREATE OR REPLACE TRIGGER EPAY.DUPLICATE_PSB9_TRNS_FEESTRNS_TRG
   AFTER INSERT
   ON EPAY.EPAY_PSB9_TRNS
   FOR EACH ROW
DECLARE
   DTE                 VARCHAR2 (21);
   HDR_APPRVR_STATUS   VARCHAR2 (100);
BEGIN
   IF :NEW.OLD_TRANSACTIONS_ID > 0
   THEN
      /*GET DATE*/
      SELECT   TO_CHAR (SYSDATE, 'YYYY-MM-DD HH24:MI:SS') INTO DTE FROM DUAL;

      INSERT INTO EPAY.EPAY_PSB9_TRNS_FEES (TRANSACTIONS_ID,
                                            LOW_RANGE,
                                            HIGH_RANGE,
                                            FEE,
                                            CREATED_BY,
                                            CREATION_DATE,
                                            LAST_UPDATE_BY,
                                            LAST_UPDATE_DATE)
         SELECT   :NEW.TRANSACTIONS_ID,
                  LOW_RANGE,
                  HIGH_RANGE,
                  FEE,
                  CREATED_BY,
                  DTE,
                  LAST_UPDATE_BY,
                  DTE
           FROM   EPAY.EPAY_PSB9_TRNS_FEES
          WHERE   TRANSACTIONS_ID = :NEW.OLD_TRANSACTIONS_ID;
   END IF;
END DUPLICATE_PSB9_TRNS_FEESTRNS_TRG;