/* Formatted on 12-15-2018 10:39:02 AM (QP5 v5.126.903.23003) */
DROP TABLE RPT.RPT_DET_RPT_GRPS  CASCADE CONSTRAINTS PURGE;

CREATE TABLE RPT.RPT_DET_RPT_GRPS (
   GROUP_ID             NUMBER NOT NULL,
   TITLE                VARCHAR2 (300),
   COL_NOS              CLOB,
   GRP_WIDTH_DESC       VARCHAR2 (30),                         -- FULL OR HALF
   NOF_COLS_WTHN        NUMBER,                                      -- 2 OR 4
   GRP_ORDER            NUMBER,
   REPORT_ID            NUMBER NOT NULL,
   GRP_DSPLY_TYPE       VARCHAR2 (15),
   GRP_MIN_HEIGHT_PX    NUMBER,
   COLUMN_HDR_NAMES     CLOB,
   DELIMITER_COL_VALS   VARCHAR2 (5),
   DELIMITER_ROW_VALS   VARCHAR2 (5),
   CREATED_BY           NUMBER NOT NULL,
   CREATION_DATE        VARCHAR2 (21) NOT NULL,
   LAST_UPDATE_BY       NUMBER NOT NULL,
   LAST_UPDATE_DATE     VARCHAR2 (21) NOT NULL,
   GRP_BORDER           VARCHAR2 (10),
   LABEL_MAX_WIDTH      NUMBER,
   CONSTRAINT PK_GRP_ID PRIMARY KEY (GROUP_ID)
)
TABLESPACE RHODB
PCTUSED 0
PCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN RPT.RPT_DET_RPT_GRPS.GRP_WIDTH_DESC IS 'full or half';

COMMENT ON COLUMN RPT.RPT_DET_RPT_GRPS.NOF_COLS_WTHN IS '2 or 4';

CREATE INDEX RPT.IDX_GRP_REPORT_ID
   ON RPT.RPT_DET_RPT_GRPS (REPORT_ID)
   LOGGING
   TABLESPACE RHODB
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
   NOPARALLEL;

-- INDEX: RPT.RPT.IDX_TITLE

-- DROP INDEX RPT.RPT.IDX_TITLE;

CREATE INDEX RPT.IDX_TITLE
   ON RPT.RPT_DET_RPT_GRPS (TITLE)
   LOGGING
   TABLESPACE RHODB
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
   NOPARALLEL;

DROP SEQUENCE RPT.RPT_DET_RPT_GRPS_GROUP_ID_SEQ;

CREATE SEQUENCE RPT.RPT_DET_RPT_GRPS_GROUP_ID_SEQ
   START WITH 1
   MAXVALUE 9223372036854775807
   MINVALUE 1
   NOCYCLE
   NOCACHE
   ORDER;

CREATE OR REPLACE TRIGGER RPT.RPT_DET_RPT_GRPS_GROUP_ID_TRG
   BEFORE INSERT
   ON RPT.RPT_DET_RPT_GRPS
   FOR EACH ROW
   -- OPTIONALLY RESTRICT THIS TRIGGER TO FIRE ONLY WHEN REALLY NEEDED
   WHEN (NEW.GROUP_ID IS NULL)
DECLARE
   V_ID   RPT.RPT_DET_RPT_GRPS.GROUP_ID%TYPE;
BEGIN
   SELECT   RPT.RPT_DET_RPT_GRPS_GROUP_ID_SEQ.NEXTVAL INTO V_ID FROM DUAL;

   :NEW.GROUP_ID := V_ID;
END RPT_DET_RPT_GRPS_GROUP_ID_TRG;