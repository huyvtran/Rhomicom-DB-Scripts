/* Formatted on 12-15-2018 12:05:43 PM (QP5 v5.126.903.23003) */
DROP TABLE RPT.RPT_REPORT_RUNS  CASCADE CONSTRAINTS PURGE;

CREATE TABLE RPT.RPT_REPORT_RUNS (
   RPT_RUN_ID             NUMBER NOT NULL,
   RUN_BY                 NUMBER,
   RUN_DATE               VARCHAR2 (21 BYTE),
   RPT_RUN_OUTPUT         CLOB,
   RUN_STATUS_TXT         VARCHAR2 (100 BYTE), -- E.G. IN QUEUE, STARTED, RUNNING, FORMATTING
   RUN_STATUS_PRCT        NUMBER,
   REPORT_ID              NUMBER,
   RPT_RN_PARAM_IDS       CLOB,
   RPT_RN_PARAM_VALS      CLOB,
   OUTPUT_USED            VARCHAR2 (50 BYTE),
   ORNTN_USED             VARCHAR2 (50 BYTE),
   LAST_ACTV_DATE_TME     VARCHAR2 (21 BYTE),
   IS_THIS_FROM_SCHDLER   VARCHAR2 (1 BYTE) DEFAULT '0' NOT NULL,
   SHLD_RUN_STOP          VARCHAR2 (1 BYTE) DEFAULT '0' NOT NULL,
   ALERT_ID               INTEGER DEFAULT -1 NOT NULL,
   MSG_SENT_ID            NUMBER DEFAULT -1 NOT NULL,
   CONSTRAINT PK_RPT_RUN_ID PRIMARY KEY (RPT_RUN_ID)
)
TABLESPACE RHODB
PCTUSED 0
PCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN RPT.RPT_REPORT_RUNS.RUN_STATUS_TXT IS
'E.g. In Queue, Started, Running, Formatting';


CREATE INDEX RPT.IDX_R_REPORT_ID
   ON RPT.RPT_REPORT_RUNS (REPORT_ID)
   LOGGING
   TABLESPACE RHODB
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
   NOPARALLEL;

CREATE INDEX RPT.IDX_RUN_BY
   ON RPT.RPT_REPORT_RUNS (RUN_BY)
   LOGGING
   TABLESPACE RHODB
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
   NOPARALLEL;

CREATE INDEX RPT.IDX_RUN_DATE
   ON RPT.RPT_REPORT_RUNS (RUN_DATE)
   LOGGING
   TABLESPACE RHODB
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
   NOPARALLEL;

DROP SEQUENCE RPT.RPT_REPORT_RUNS_RPT_RUN_ID_SEQ;

CREATE SEQUENCE RPT.RPT_REPORT_RUNS_RPT_RUN_ID_SEQ
   START WITH 1
   MAXVALUE 9223372036854775807
   MINVALUE 1
   NOCYCLE
   NOCACHE
   ORDER;

CREATE OR REPLACE TRIGGER RPT.RPT_REPORT_RUNS_RPT_RUN_ID_TRG
   BEFORE INSERT
   ON RPT.RPT_REPORT_RUNS
   FOR EACH ROW
   -- OPTIONALLY RESTRICT THIS TRIGGER TO FIRE ONLY WHEN REALLY NEEDED
   WHEN (NEW.RPT_RUN_ID IS NULL)
DECLARE
   V_ID   RPT.RPT_REPORT_RUNS.RPT_RUN_ID%TYPE;
BEGIN
   SELECT   RPT.RPT_REPORT_RUNS_RPT_RUN_ID_SEQ.NEXTVAL INTO V_ID FROM DUAL;

   :NEW.RPT_RUN_ID := V_ID;
END RPT_REPORT_RUNS_RPT_RUN_ID_TRG;