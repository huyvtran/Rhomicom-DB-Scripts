/* Formatted on 10/6/2014 3:14:32 PM (QP5 v5.126.903.23003) */
-- FUNCTION: APLAPPS.GET_ITEM_UNIT_SLLNG_PRICE(NUMBER, NUMBER)

-- DROP FUNCTION APLAPPS.GET_ITEM_UNIT_SLLNG_PRICE(NUMBER, NUMBER);

CREATE OR REPLACE FUNCTION APLAPPS.GET_ITEM_UNIT_SLLNG_PRICE (
   ITMID    NUMBER,
   QTY      NUMBER
)
   RETURN NUMBER
AS
   BID                 NUMBER := 0.00;
   BASEUOMID           NUMBER := -1;
   BASEUOMSLLNGPRICE   NUMBER := 0.00;
   NWTTLAMNT           NUMBER := 0.00;
   UOMQTY              NUMBER := 0.00;
   REMQTY              NUMBER := 0.00;
   CONVFCTR            NUMBER := 0.00;
   UOMCNT              NUMBER := 0;

   CURSOR ROW_DATA_CUSOR
   IS
      SELECT   A.UOM_ID,
               A.CNVSN_FACTOR CFTR,
               A.SELLING_PRICE SPRC,
               A.UOM_LEVEL
        FROM   INV.ITM_UOMS A
       WHERE   (A.ITEM_ID = ITMID)
      UNION
      SELECT   B.BASE_UOM_ID,
               1 CFTR,
               B.SELLING_PRICE SPRC,
               -1
        FROM   INV.INV_ITM_LIST B
       WHERE   (B.ITEM_ID = ITMID)
      ORDER BY   4 DESC;

   ROW_DATA            ROW_DATA_CUSOR%ROWTYPE;
BEGIN
   OPEN ROW_DATA_CUSOR;

   FETCH ROW_DATA_CUSOR INTO ROW_DATA;

   CLOSE ROW_DATA_CUSOR;

   SELECT   COUNT (A.UOM_ID)
     INTO   UOMCNT
     FROM   INV.ITM_UOMS A
    WHERE   (    A.ITEM_ID = ITMID
             AND A.CNVSN_FACTOR != 0
             AND A.SELLING_PRICE != 0);

   IF QTY <= 1 OR UOMCNT <= 0
   THEN
      SELECT   NVL (A.SELLING_PRICE, 0), BASE_UOM_ID
        INTO   BASEUOMSLLNGPRICE, BASEUOMID
        FROM   INV.INV_ITM_LIST A
       WHERE   (A.ITEM_ID = ITMID);

      BID := BASEUOMSLLNGPRICE;
      RETURN NVL (BID, 0);
   END IF;

   REMQTY := QTY;

   FOR ROW_DATA IN ROW_DATA_CUSOR
   LOOP
      CONVFCTR := ROW_DATA.CFTR;
      UOMQTY := FLOOR (REMQTY / CONVFCTR);
      REMQTY := MOD (REMQTY, CONVFCTR);

      NWTTLAMNT := NWTTLAMNT + (UOMQTY * ROW_DATA.SPRC);
   END LOOP;

   BID := ROUND (NWTTLAMNT / QTY, 4);
   RETURN NVL (BID, 0);
EXCEPTION
   WHEN OTHERS
   THEN
      RETURN 0.00;
END;
/