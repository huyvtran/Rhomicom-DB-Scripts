/* Formatted on 10/6/2014 7:23:23 PM (QP5 v5.126.903.23003) */
CREATE TABLE ATTN.ATTN_ATTENDANCE_EVENTS_RSLTS (
   EVNT_RSLT_ID       NUMBER NOT NULL,
   EVENT_ID           NUMBER,
   EVNT_METRIC_ID     NUMBER,
   RSLT_DESC          VARCHAR2 (500 BYTE),
   EVENT_RESULT       CLOB,
   RSTL_START_DATE    VARCHAR2 (21 BYTE),
   RSLT_END_DATE      VARCHAR2 (21 BYTE),
   CREATED_BY         VARCHAR2 (21 BYTE) NOT NULL,
   CREATION_DATE      VARCHAR2 (21 BYTE) NOT NULL,
   LAST_UPDATE_BY     VARCHAR2 (21 BYTE) NOT NULL,
   LAST_UPDATE_DATE   VARCHAR2 (21 BYTE) NOT NULL,
   AUTO_CALC          VARCHAR2 (1 BYTE),
   LNKD_RGSTR_ID      NUMBER NOT NULL
)
TABLESPACE RHODB
PCTUSED 0
PCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;

CREATE UNIQUE INDEX ATTN.IDX_EVNT_RSLT_ID
   ON ATTN.ATTN_ATTENDANCE_EVENTS_RSLTS (EVNT_RSLT_ID)
   LOGGING
   TABLESPACE RHODB
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (PCTINCREASE 0 BUFFER_POOL DEFAULT)
   NOPARALLEL;

   ALTER TABLE ATTN.ATTN_ATTENDANCE_EVENTS_RSLTS ADD (
  CONSTRAINT PK_EVNT_RSLT_ID
 PRIMARY KEY
 (EVNT_RSLT_ID));

CREATE SEQUENCE ATTN.ATTN_ATTENDANCE_RSLTS_SEQ
   START WITH 1
   MAXVALUE 9223372036854775807
   MINVALUE 1
   NOCYCLE
   CACHE 20
   ORDER;

CREATE OR REPLACE TRIGGER ATTN.ATTN_ATTENDANCE_RSLTS_TRG
   BEFORE INSERT
   ON ATTN.ATTN_ATTENDANCE_EVENTS_RSLTS
   FOR EACH ROW
   -- OPTIONALLY RESTRICT THIS TRIGGER TO FIRE ONLY WHEN REALLY NEEDED
   WHEN (NEW.EVNT_RSLT_ID IS NULL)
DECLARE
   V_ID   ATTN.ATTN_ATTENDANCE_EVENTS_RSLTS.EVNT_RSLT_ID%TYPE;
BEGIN
   SELECT   ATTN.ATTN_ATTENDANCE_RSLTS_SEQ.NEXTVAL INTO V_ID FROM DUAL;

   :NEW.EVNT_RSLT_ID := V_ID;
END ATTN_ATTENDANCE_RSLTS_TRG;